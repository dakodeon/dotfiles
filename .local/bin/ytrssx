#!/bin/env sh

### --HELP START-- ###

# YouTube RSS eXtractor

# Actually supports more than YouTube, I intend to include every site I
# come across that has a strange way of getting an RSS feed. For now, three
# cases are handled: YouTube account, Github project and general URL.

# Usage: ytrssx [URL]

# URL: the URL from which we intend to extract the RSS feed. If it is not
# present, the script will assume a valid URL is in the clipboard.

# The script will store the exracted RSS feed's URL onto a file. For my
# setup, this file is the one newsboat uses (~/.config/newsboat/urls).
# -- TODO: add argument for custom file.

# I have my feeds file split onto categories. So, the script prompts for an
# existing category, but a new one can also be defined. The categories are
# defined by lines in the file of the form " -- CATEGORY -- ". This is not
# a functionality of newsboat, but it handles it pretty well, just as an
# empty feed. In some other feed reader this could throw an error.

# Another functionality of newsboat incorporated here, is the ability to
# define tags. So you get a prompt to add those.
# -- TODO: include existing tags in the prompt.

# The script depends on dmenu and xclip.

# dakodeon, 2020

### --HELP END-- ###

[ "$1" = "-h" ] && sed '0,/HELP START/d;/HELP END/,$d;s/^# //' "$0" && exit

url="${1:-$(xclip -selection clipboard -o)}"

urlfile="$HOME/.config/newsboat/urls"

case "$url" in
    *youtube*)
	feed="$(curl -s "$url" | grep -o '"externalId":"[a-zA-Z0-9_\-]*"' | tr -d "\"" | awk -F':' '{print "https://www.youtube.com/feeds/videos.xml?channel_id="$2}')"
	;;
    *github*)
	feed="$(curl -s "$url" | grep -o 'https://github.com/.*\.atom')"
	;;
    http*)
	feed="$url"
	;;
    *)
	dunstify "No RSS feed found!" && exit 23
	;;
esac

# [ -n "$feed" ] && { echo "$feed" | xclip -selection clipboard; dunstify " RSS feed in clipboard" "$(echo "$feed")"; }
# [ -z "$feed" ] && dunstify "No RSS feed found!" && exit 23

topics="$(sed -n 's/^"\s\+--\s\([A-Z ]\+\)\s--\s\+"$/\1/p' "$urlfile")"

topicsel="$(printf %s "$topics" | dmenu -i -l 5 -p "Feed \"$feed\" topic: ")" || exit 23

echo "$topics" | grep -q "$topicsel" && topicexists=true || topicexists=false

taglist="$(echo "" | dmenu -p "Add some tags: ")"

entry="$feed${taglist:+ $taglist}"

if $topicexists; then
    sed -i "/\"    -- $topicsel --    \"/a $entry" "$urlfile"
else
    printf "\"    -- %s --    \"\n%s" "$topicsel" "$entry" >> "$urlfile"
fi

dunstify " RSS feed added" "to $urlfile"
