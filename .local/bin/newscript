#!/bin/env sh

# create a new shell script, make it executable, and open it in $EDITOR.
# invoke with the name for the script as an argument. If called with
# the -x option, opens $EDITOR in new $TERMINAL

scripts_dir="$HOME/.source/dotfiles/.local/bin"
def_loc="$scripts_dir"

[ "$1" = "-x" ] && external=true && shift
[ -z "$1" ] && echo "No script name given" && exit 1

name="$1"

[ ! -d "$scripts_dir" ] && echo "$scripts_dir does not exist!" && exit 1 

cd "$scripts_dir"
dirs="$(find . -type d | sed 's/\/$//')"

[ "$external" = "true" ] && \
    loc="$(printf %s "$dirs" | dmenu -l 5 -i -r -p "Where to? ")" || \
	loc="$(printf %s "$dirs" | fzf --height=10 -e --prompt="Where to? ")" || exit 23

fullname="$(echo "$loc/$name" | sed 's/^\.\///')"

[ -f "$fullname" ] && echo "File \"$fullname\" already exists!" && exit 23

echo "#!/bin/env sh" > "$fullname" && chmod +x "$fullname"

[ "$external" = "true" ] && \
	emacsclient -c "$scripts_dir"/"$fullname" || devour emacsclient -c "$fullname"

# check for my restow script and run it if file is written
[ "$(wc -l "$fullname" | cut -d' ' -f 1)" = "1" ] && \
	rm "$fullname" || \
	  { which dotfiles-update >/dev/null && dotfiles-update; }

