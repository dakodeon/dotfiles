set ifs "\n"

# set promptfmt "\033[32;1m%u@%h\033[0m:\033[34;1m%d"

set preview
set icons true
set hiddenfiles ".*:*.xmp:#*#"
set ratios 1:2:3
set scrolloff 10
set mouse true
set incsearch true

## ui commands
cmd open $opener $f &

# open file replacing lf window
cmd open-inplace ${{
    [ -f $f ] && devour opener $f || exit 0
}}

cmd broot-jump ${{
    res="$(broot)"
    [ -z "$res" ] && exit
    if [ -f "$res" ]; then
        cmd="select"
    elif [ -d "$res" ]; then
        cmd="cd"
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd filemark %{{
    echo Mark file as:
    read ans
    filemark-util -A $ans $f
}}

cmd filemark-find ${{
    choice="$(filemark-util -P)" || exit 0
    lf -remote "send $id select \"$choice\""
}}

cmd filemark-remove $filemark-util -D

cmd 1pane ${{
    lf-ueberzug-cleaner
    lf -remote "send $id set nopreview"
    lf -remote "send $id set ratios 1"
}}

cmd 2pane ${{
    lf -remote "send $id set ratios 1:1"
    lf -remote "send $id set preview"
}}

cmd 3pane ${{
    lf -remote "send $id set ratios 1:2:3"
    lf -remote "send $id set preview"
}}

cmd reload-conf ${{
    lf -remote "send $id source ~/.config/lf/lfrc"
    lf -remote "send $id echo Config reloaded"
}}

# files commands

cmd trash %{{
    cnt=0
    for file in $fx; do
    	trash "$file" && ((cnt=cnt+1))
	done && dunstify " Trash" "$cnt file(s) trashed"
}}

cmd trash-empty %{{
    trashdir="$(trash -W)"
    numfiles="$(ls $trashdir | wc -l)"
    echo "Really delete $numfiles file(s)? [y/N]"
    read ans
    [ "$ans" == "y" ] && trash -e && echo Files deleted && dunstify " Trash empty" "$numfiles file(s) deleted"
}}

cmd pack %{{
    echo "Archive name (w/extension):"
    read ans
    for file in $fx; do
    	atool "$ans" -a "$(basename $file)"
	done
    lf -remote "send $id unselect"
}}

cmd unpack %{{
    echo "Unpack archive to (default: current dir):"
    read ans
    [ -z $ans ] && ans="."
    [ ! -d $ans ] && mkdir -p "$ans"
    [ -d $ans ] && atool -X "$ans" $fx
    lf -remote "send $id unselect"
}}

cmd mkdir %{{
    echo "New dir:"
    read name
    mkdir "$name"
}}

cmd mkfile %{{
    echo "File name:"
    read name
    $EDITOR "$name"
}}

cmd chmod %{{
    echo "Mode bits:"
    read ans
    for file in $fx; do
    	chmod $ans $file
    done
    lf -remote 'send reload'
}}

cmd sort-ctime :{{
    set sortby ctime
    set reverse
    set nodirfirst
    set info ctime
    top
}}

cmd sort-size :{{
    set sortby size
    set reverse
    set nodirfirst
    set info size
    top
}}

cmd sort-ext :{{
    set sortby ext
    set noreverse
    set dirfirst
    set info
}}

cmd sort-natural :{{
    set sortby natural
    set noreverse
    set dirfirst
    set info 
}}

# clear some default bindings
map y
map d
map w
map se
map st
map sn
map ss
map sc
map zr
map zh
cmap <tab>
map <f-1>

cmap <tab> cmd-menu-complete
map <a-R> reload-conf
map <enter> open
map O open-inplace
map W $$SHELL

map w1 1pane
map w2 2pane
map w3 3pane

map sn sort-natural
map se sort-ext
map ss sort-size
map st sort-ctime
map sd set dirfirst!
map sr set reverse!

map zz set hidden!

map + mkdir
map M chmod
map xx unpack
map xz pack

map m filemark
map ` filemark-find
map ~ filemark-remove

map yy copy
map yd cut
map dd trash
map DD delete

map YY $copyto $fx; lf -remote "send $id unselect"
map YD $moveto $fx; lf -remote "send $id unselect"

map J broot-jump

map Tr $trashrestore
map TD trash-empty

# map PP &sxivdir -1 $fx; lf -remote "send $id unselect"
# map PR &sxivdir $fx; lf -remote "send $id unselect"
# map Pp &sxivdir -1
# map Pr &sxivdir

map bg %wallset $f

source "~/.config/lf/lfrc-locations"